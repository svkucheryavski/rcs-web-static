<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<meta http-equiv="Content-Language" content="ru">
<meta name="GENERATOR" content="Microsoft FrontPage 12.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<title>MatLab. Руководство для начинающих</title>
<style>
<!--
h1           {
	font-family: Arial;
	font-size: 14pt;
	font-weight: bold;
	text-align: Center;
	padding-top: 75px;
}
#menu        { font-family: Tahoma; font-size: 12pt; font-weight: bold }
h2           {
	font-family: Arial;
	font-size: 12pt;
	font-style: italic;
	padding-top: 25px;
}
.header      { font-family: Arial; font-size: 18pt; letter-spacing: 1; font-weight: bold; 
               text-align: Center }
.style1 {
	text-align: center;
}
.menu {
	font-family: Tahoma;
	font-size: 12px;
	font-weight: bold;
}
.prog {
	font-family: "Courier New", Courier, monospace;
}
.address {
	font-family: Arial, Helvetica, sans-serif;
}
-->
</style>
        <title></title>
</head>

<body>

<p>&nbsp;</p>
  <center>
  <table border="0" width="95%" cellpadding="0" cellspacing="0">
    <tr>
      <td width="100%">
</center>
      <h3 class="header">MatLab. Руководство для
      начинающих</h3>
      <dl>
        <div align="center">
          <center>
          <dt>© <span lang="en-us">2006 </span>Евгений Михайлов, Алексей
            Померанцев</dt>
          </center>
        </div>
        <div align="center">
          <center>
          <dt><a href="../index.html">Российское хемометрическое общество</a></dt>
          </center>
        </div>
      </dl>
        <h1><a name="Contents"></a>Содержание&nbsp;</h1>
        <dl>
          <dt><b><a href="#Ch0">Введение&nbsp;</a></b></dt>
          <dt><b><a href="#Ch1">1. Базовые сведения&nbsp;</a></b></dt>
          <dd><b><a href="#Ch1.1">1.1. Рабочая среда MatLab</a></b></dd>
          <dd><b><a href="#Ch1.2">1.2. Простейшие вычисления&nbsp;</a></b></dd>
          <dd><b><a href="#Ch1.3">1.3. Эхо команд</a></b></dd>
          <dd><b><a href="#Ch1.4">1.4. Сохранение рабочей
            среды. MAT файлы</a></b></dd>
          <dd><a href="#Ch1.5"><b>1.5. Журнал</b></a></dd>
          <dd><a href="#Ch1.6"><b>1.6. Система помощи&nbsp;</b></a></dd>
          <dt><b><a href="#Ch2">2. Матрицы</a></b></dt>
          <dd><a href="#Ch2.1"><b>2.1. Скаляры, векторы и
            матрицы</b></a></dd>
          <dd><a href="#Ch2.2"><b>2.2. Доступ к элементам</b></a></dd>
          <dd><a href="#Ch2.3"><b>2.3&nbsp; Основные матричные
            операции</b></a></dd>
          <dd><a href="#Ch2.4"><b>2.4. Создание матриц
            специального вида</b></a></dd>
          <dd><a href="#Ch2.5"><b>2.5. Матричные вычисления</b></a></dd>
          <dt><a href="#Ch3"><b>3. Интегрирование MatLab и Excel</b></a></dt>
          <dd><a href="#Ch3.1"><b>3.1. Конфигурирование Excel&nbsp;</b></a></dd>
          <dd><a href="#Ch3.2"><b>3.2. Обмен данными между
            MatLab и Excel</b></a></dd>
          <dt><b><a href="#Ch4">4.Программирование</a></b></dt>
          <dd><b><a href="#Ch4.1">4.1. М-файлы</a></b></dd>
          <dd><b><a href="#Ch4.2">4.2. Файл-программа&nbsp;</a></b></dd>
          <dd><b><a href="#Ch4.2">4.3. Файл-функция</a></b></dd>
          <dd><b><a href="#Ch4.4">4.4. Создание графика&nbsp;</a></b></dd>
          <dd><b><a href="#Ch4.5">4.5. Печать графиков</a></b></dd>
          <dt><b><a href="#Ch5">5. Примеры программ&nbsp;</a></b></dt>
          <dd><b><a href="#Ch5.1">5.1. Центрирование и
            шкалирование</a></b></dd>
          <dd><b><a href="#Ch5.2">5.2. SVD/PCA</a></b></dd>
          <dd><b><a href="#Ch5.3">5.3. PCA/NIPALS&nbsp;</a></b></dd>
          <dd><b><a href="#Ch5.4"> 5.4. PLS1&nbsp;</a></b></dd>
          <dd><b><a href="#Ch5.5">5.5. PLS2&nbsp;</a></b></dd>
          <dt><b><a href="#Ch6">Заключение</a></b></dt>
          <dd><a name="Ch0"></a>&nbsp;</dd>
        </dl>
        <h1>Введение&nbsp;</h1>
      <p>В этом пособии рассказывается о
        применении пакета&nbsp; <a href="http://www.mathworks.com/">MatLab</a>
      для анализа многомерных данных. Этот
      текст не является
        учебником по MatLab. В нем
        приведены только базовые сведения&nbsp; о
      работе в этой среде, необходимые для
      реализации основных алгоритмов. Более
      подробное изложение можно найти <a href="references.htm#L1.6">здесь</a>.&nbsp;</p>
        <p>В пособии интенсивно используются
        понятия и методы матричной алгебры –
        вектор, матрица, и т.п. Читателям,
        которые плохо знакомы с этим аппаратом,
        рекомендуется изучить, или, хотя бы
        просмотреть, пособие &quot;<a href="matrix.htm">Матрицы и векторы</a>&quot;.&nbsp;</p>
      <p>Для практического воплощения
      хемометрических методов используются
      как специализированные пакеты программ
      (например, <a href="http://www.camo.com/rt/Products/Unscrambler/unscrambler.html">the
      Unsrambler</a> или <a href="http://www.umetrics.com/simca">SIMCA</a>),
      так и статистические пакеты общего
      назначения (например, <a href="http://www.spss.com/">SPSS</a>
      или <a href="http://www.statsoft.com/">Statistica</a>). Среди
      средств общего назначения, используемых
      в хемометрике, особое место занимает
      пакет MatLab. Его популярность необычайно
      высока. Это объясняется тем, что MatLab
      является мощным и универсальным
      обработки многомерных данных. Сама
      структура пакета делает его удобным
      средством для проведения матричных
      вычислений. Спектр проблем,
      исследование которых может,
      осуществлено при помощи MatLab, охватывает:
      матричный анализ, обработку сигналов и
      изображений, нейронные сети и многие
      другие. MatLab — это язык высокого уровня,
      имеющий открытый код, что дает
      возможность опытным пользователям
      разбираться в запрограммированных
      алгоритмах. Простой встроенный язык
      программирования позволяет легко
      создавать собственные алгоритмы. За
      много лет использования MatLab создано
      огромное количество функций и ToolBox (пакетов специализированных 
		средств). Самым популярным является пакет <a href="http://software.eigenvector.com/toolbox/pls_toolbox/index.html">PLS
      ToolBox</a> компании <a href="http://www.eigenvector.com/">Eigenvector
      Research, Inc</a>.</p>
      <p>Многие <a href="references.htm#L4.5">книги</a>&nbsp;
        и статьи содержат MatLab коды, позволяющие
        читателю сразу применить описываемые
        методы на практике. MatLab прекрасно
        интегрируется с Microsoft Word и Excel. Российское хемометрическое общество
        издало <a href="references.htm#L3.2"> учебное пособие</a>,
        являющееся полезным введением в
        хемометрические приложения MatLab.</p>
<p class="style1"><b><a href="index.html">Другие 
		пособия по хемометрике</a></b></p>
      <p style="line-height: 150%"><a href="#Contents">Содержание</a>
          <a name="Ch1"></a>
      <h1>1. Базовые сведения <a name="Ch1.1"></a> </h1>
        <h2>1.1. Рабочая среда MatLab</h2>
      <p>Чтобы запустить программу дважды
      щелкните на иконку <img border="0" src="matlab/matlab.gif" align="middle" width="65" height="52">.&nbsp;
      Перед Вами откроется рабочая среда,
      изображенная на рисунке.</p>
      <p align="center"><img border="0" src="matlab/Fig-01.png" width="750" height="683"></p>
      <p>Рабочая среда <em>MatLab 6.х</em> немного
      отличается от рабочей среды предыдущих
      версий, она имеет более удобный
      интерфейс для доступа ко многим
      вспомогательным элементам</p>
      <p>Рабочая среда <em>MatLab 6.х</em> содержит
      следующие элементы:</p>
      <ul>
        <li>
          <p>панель инструментов с кнопками и
          раскрывающимся списком;</p>
        <li>
          <p>окно с вкладками <span class="menu">Launch
          Pad </span> и <b class="menu">Workspace</b>,
          из которого можно получить доступ к
          различным модулям <span class="guilabel">ToolBox</span>
          и к содержимому рабочей среды;</p>
        <li>
          <p>окно с вкладками <strong class="menu">Command
          History</strong> и <strong class="menu">Current
          Directory</strong>, предназначенное
          для просмотра и повторного вызова
          ранее введенных команд, а также для
          установки текущего каталога;</p>
        <li>
          <p>командное окно, в котором находится
          приглашение к вводу <span class="guilabel">»</span>
          и мигающий вертикальный курсор;</p>
        <li>
          <p>строку состояния.</p>
        </li>
      </ul>
      <p>Если в рабочей среде <em>MatLab 6.х</em>
      отсутствуют некоторые окна, приведенные
      на рисунке, то следует в меню View
      выбрать соответствующие пункты: <b class="menu">Command
      Window</b>, <span class="menu">Command
      History</span>, <span class="menu">Current
      Directory</span>, <span class="menu">Workspase</span>,
      <span class="menu">Launch Pad</span>.</p>
      <p>Команды следует набирать в командном
      окне. Символ <span class="guilabel">»</span>,
      обозначающий приглашение к вводу
      командной строки, набирать не нужно. Для
      просмотра рабочей области удобно
      использовать полосы скроллинга или
      клавиши <span class="menu">Home</span>, <span class="menu">End</span>,
      для перемещения влево или вправо, и <span class="menu">PageUp</span>,
      <span class="menu">PageDown</span> для
      перемещения вверх или вниз. Если вдруг
      после перемещения по рабочей области
      командного окна пропала командная
      строка с мигающим курсором, просто
      нажмите <span class="menu">Enter</span>.</p>
      <p>Важно помнить, что набор любой команды
      или выражения должен заканчиваться
      нажатием на <span class="menu">Enter</span>,
      для того, чтобы программа MatLab выполнила
      эту команду или вычислила выражение.</p>
        <p><a href="#Contents">Содержание</a>&nbsp; <a name="Ch1.2"></a> </p>
        <h2>1.2. Простейшие вычисления </h2>
        <p>Наберите в командной строке <span class="prog">1+2</span>
        и нажмите <span class="menu">Enter</span>. В
        результате в командном окне MatLab
        отображается следующее:</p>
        <p align="center"><img border="0" src="matlab/Fig-02.png" width="399" height="175">
        <p align="center"><samp><a name="Fig02"></a>Рис. 2 Графическое
        представление метода главных
        компонент</samp></p>
        <p>Что сделала программа MatLab? Сначала
        она вычислила сумму <span class="prog">1+2</span>,
        затем записала результат в специальную
        переменную <span class="prog">ans</span>
        и вывела ее значение, равное <span class="prog">3</span>,
        в командное окно. Ниже ответа
        расположена командная строка с
        мигающим курсором, обозначающая, что
        MatLab готов к дальнейшим вычислениям.
        Можно набирать в командной строке
        новые выражения и находить их значения.
        Если требуется продолжить работу с
        предыдущим выражением, например,
        вычислить <span class="prog">(1+2)/4.5</span>,
        то проще всего воспользоваться уже
        имеющимся результатом, который
        хранится в переменной <span class="prog">ans</span>.
        Наберите <span class="prog">ans/4.5</span>
        (при вводе десятичных дробей
        используется точка) и нажмите <b class="menu">Enter</b>,
        получается
        <p align="center"><img border="0" src="matlab/Fig-03.png" width="399" height="175">
        <p align="center"><samp><a name="Fig03"></a>Рис. 3 Графическое
        представление метода главных
        компонент</samp></p>
        <p><a href="#Contents">Содержание</a>.<a name="Ch1.3"></a>
      <h2>1.3. Эхо команд</h2>
        <p>Выполнение каждой команды в MatLab
        сопровождается эхом. В приведенном
        выше примере — это ответ <span class="prog">ans
        = 0.6667</span>. Часто эхо затрудняет
        восприятие работы программы и тогда
        его можно отключить. Для этого команда
        должна завершаться символом точка с
        запятой. Например
        <p align="center"><img border="0" src="matlab/Fig-04.png" width="399" height="197">
        <p align="center"><samp><a name="Fig04"></a>Рис. 4 Пример ввода
        функции ScoresPCA</samp></p>
        <p><a href="#Contents">Содержание</a>.<a name="Ch1.4"></a></p>
      <h2>1.4. Сохранение рабочей среды. MAT файлы</h2>
        <p>Самый простой способ сохранить все
        значения переменных — использовать в
        меню <span class="menu">File</span> пункт <span class="menu">Save Workspase As.</span>
        При этом появляется диалоговое окно <span class="menu">Save</span>
		<span class="menu">Workspase Variables</span>, в котором следует
        указать каталог и имя файла. По
        умолчанию предлагается сохранить файл
        в подкаталоге <span class="menu">work</span> основного
        каталога MatLab. Программа сохранит
        результаты работы в файле с
        расширением <span class="menu">mat</span>. Теперь можно
        закрыть MatLab. В следующем сеансе работы
        для восстановления значений
        переменных следует открыть этот
        сохраненный файл при помощи подпункта <span class="menu">Open</span>
        меню <span class="menu">File</span>. Теперь все
        переменные, определенные в прошлом
        сеансе, опять стали доступными. Их
        можно использовать во вновь вводимых
        командах.</p>
        <p align="left"><a href="#Contents">Содержание</a>.<a name="Ch1.5"></a></p>
        <h2 align="left">1.5. Журнал</h2>
        <p align="left">В MatLab имеется возможность
        записывать исполняемые команды и
        результаты в текстовый файл (вести
        журнал работы), который потом можно
        прочитать или распечатать из
        текстового редактора. Для начала
        ведения журнала служит команда <span class="prog"><strong>diary</strong></span>.
        В качестве аргумента команды <span class="prog"><strong>diary</strong>
		</span>следует задать имя файла, в котором
        будет храниться журнал работы.
        Набираемые далее команды и результаты
        их исполнения будут записываться я в
        этот файл, например последовательность
        команд
        <p align="center"><img border="0" src="matlab/Fig-05.png" width="400" height="242">
        <p align="left">производит следующие действия:&nbsp;
      <ol>
        <li>
          <p align="left" style="margin-bottom: 6">открывает
          журнал в файле <span class="prog">exampl-1.txt</span>;&nbsp;</li>
        <li>
          <p align="left" style="margin-bottom: 6">производит
          вычисления;&nbsp;</li>
        <li>
          <p align="left" style="margin-bottom: 6">сохраняет все
          переменные в MAT файле <span class="prog">work-1.mat</span>;&nbsp;</li>
        <li>
          <p align="left" style="margin-bottom: 6">сохраняет
          журнал в файле <span class="prog">exampl-1.txt</span> в
          подкаталоге <span class="menu">work</span> корневого
          каталога MatLab и закрывает MatLab;&nbsp;</li>
      </ol>
        <p align="left" style="line-height: 100%; margin-bottom: 20">Посмотрите
        содержимое файла <span class="prog">exampl-1.txt</span> в каком-нибудь
        текстовом редакторе. В файле окажется
        следующий текст:
      <div align="center">
        <center>
        <table border="1" cellpadding="6" cellspacing="0" width="70%" bgcolor="#DFDFDF">
          <tr>
            <td width="100%"><code>a1=3;&nbsp;<br>
              a2=2.5;&nbsp;<br>
              a3=a1+a2&nbsp;<br>
              &nbsp;<br>
              a3 =&nbsp;<br>
              &nbsp;<br>
              &nbsp;&nbsp;&nbsp; 5.5000&nbsp;<br>
              &nbsp;<br>
              save work-1&nbsp;<br>
              quit</code></td>
          </tr>
        </table>
        </center>
      </div>
        <p align="left"><a href="#Contents">Содержание</a>.<a name="Ch1.6"></a>
        <h2 align="left">1.6. Система помощи&nbsp;</h2>
      <p align="left">Окно справки MatLab появляется
      после выбора опции <span class="menu">Help Window </span>в
      меню <span class="menu">Help</span> или нажатием
      кнопки вопроса на панели инструментов.
      Эта же операция может быть выполнена при
      наборе команды <span class="prog"><strong>helpwin</strong></span>.
      Для вывода окна справки по отдельным
      разделам, наберите <span class="prog"><strong>helpwin
      topic</strong></span>. Окно справки предоставляет
      Вам такую же информацию, как и команда <span class="prog">help</span>,
      но оконный интерфейс обеспечивает более
      удобную связь с другими разделами
      справки. Используя адрес Web-страницы
      фирмы <a href="http://www.mathworks.com/">Math Works</a>, вы
      можете выйти на сервер фирмы и получить
      самую последнюю информацию по
      интересующим вас вопросам. Вы можете
      ознакомиться с новыми <a href="http://www.mathworks.com/products">программными
      продуктами</a>&nbsp; или найти ответ на
      возникшие проблемы на странице <a href="http://www.mathworks.com/support">технической
      поддержки</a>.
        <p align="left"><a href="#Contents">Содержание</a><a name="Ch2"></a>
        <h1 align="left">2. Матрицы <a name="Ch2.1"></a></h1>
        <h2 align="left">2.1. Скаляры, векторы и матрицы</h2>
        <p align="left">В MatLab можно использовать
        скаляры, векторы и матрицы. Для ввода
        скаляра достаточно приписать его
        значение какой-то переменной, например
        <p align="center"><img border="0" src="matlab/Fig-06.png" width="398" height="178">
        <p align="left">Заметим, что MatLab различает
        заглавные и прописные буквы, так что <span class="prog">p</span>
        и <span class="prog">P</span> — это разные переменные. Для
        ввода массивов (векторов или матриц) их
        элементы заключают в квадратные скобки.
        Так для ввода вектора-строки размером 1&times;3,
        используется следующая команда, в
        которой элементы строки отделяются
        пробелами или запятыми.
        <p align="center"><img border="0" src="matlab/Fig-07.png" width="398" height="179">
        <p align="left">При вводе вектора-столбца
        элементы разделяют точкой с запятой.
        Например,
        <p align="center"><img border="0" src="matlab/Fig-08.png" width="398" height="209"><p align="left">Вводить
      небольшие по размеру матрицы удобно
      прямо из командной строки. При вводе
      матрицу можно рассматривать как вектор-столбец,
      каждый элемент которого является вектором-строкой.
        <p align="center"><img border="0" src="matlab/Fig-09.png" width="398" height="199">
        <p align="left">или матрицу можно трактовать
        как вектор строку, каждый элемент
        которой является вектором-столбцом.
        <p align="center"><img border="0" src="matlab/Fig-10.png" width="398" height="199">
        <p align="left"><a href="#Contents">Содержание</a><a name="Ch2.2"></a>
        <h2 align="left">2.2. Доступ к элементам</h2>
        <p align="left">Доступ к элементам матриц
        осуществляется при помощи двух
        индексов — номеров строки и столбца,
        заключенных в круглые скобки, например
        команда <span class="prog">B(2,3)</span>
        выдаст элемент второй строки и
        третьего столбца матрицы <span class="prog">B</span>. Для
        выделения из матрицы столбца или
        строки следует в качестве одного из
        индексов использовать номер столбца
        или строки матрицы, а другой индекс
        заменить двоеточием. Например, запишем
        вторую строку матрицы <span class="prog">A</span> в вектор 
		<span class="prog">z</span>
        <p align="center"><img border="0" src="matlab/Fig-11.png" width="398" height="186">
        <p align="left">Также можно осуществлять
        выделение блоков матриц при помощи
        двоеточия. Например, выделим из матрицы
        <span class="prog">P</span> блок отмеченный цветом
        <p align="center"><img border="0" src="matlab/Fig-12.png" width="398" height="350">
        <p align="left">Если необходимо посмотреть
        переменные рабочей среды, в командной
        строке необходимо набрать команду <span class="prog"><strong>whos</strong></span>.
        <p align="center"><img border="0" src="matlab/Fig-13.png" width="422" height="283"><p align="left">Видно,
      что в рабочей среде содержатся один
      скаляр (<span class="prog">p</span>), четыре матрицы (<span class="prog">A, B, P,
      P1</span>) и вектор-строка (<span class="prog">z</span>).
        <p align="left"><a href="#Contents">Содержание</a><a name="Ch2.3"></a>
        <h2 align="left">2.3. Основные матричные
        операции</h2>
      <p align="left">При использовании матричных
      операций следует помнить, что для
      сложения или вычитания матрицы должны
      быть одного размера, а при перемножении
      число столбцов первой матрицы обязано
      равняться числу строк второй матрицы.
      Сложение и вычитание матриц, так же как
      чисел и векторов, осуществляется при
      помощи знаков плюс и минус<p align="center"><img border="0" src="matlab/Fig-14.png" width="398" height="316"><p align="left">а
      умножение — знаком звездочка <span class="prog">*</span>.
      Введем матрицу размером 3&times;2<p align="center"><img border="0" src="matlab/Fig-15.png" width="398" height="330"><p align="left">Умножение
      матрицы на число тоже осуществляется
      при помощи звездочки, причем умножать на
      число можно как справа, так и слева.
      Возведение квадратной матрицы в целую
      степень производится с использованием
      оператора <span class="prog">^</span><p align="center"><img border="0" src="matlab/Fig-16.png" width="398" height="197"><p align="left">Проверьте
      полученный результат, умножив матрицу <span class="prog">Р</span>
      саму на себя.
        <p align="left"><a href="#Contents">Содержание</a><a name="Ch2.4"></a>
        <h2 align="left">2.4. Создание матриц
        специального вида</h2>
      <p align="left">Заполнение прямоугольной
      матрицы нулями производится встроенной
      функцией <span class="prog"><strong>zeros</strong></span><p align="center"><img border="0" src="matlab/Fig-17.png" width="398" height="212"><p align="left">Единичная
      матрица создается при помощи функции <span class="prog"><strong>eye</strong></span><p align="center"><img border="0" src="matlab/Fig-18.png" width="398" height="263"><p align="left">Матрица,
      состоящая из единиц, образуется в
      результате вызова функции <span class="prog"><strong>ones</strong></span><p align="center"><img border="0" src="matlab/Fig-19.png" width="398" height="216"><p align="left">MatLab
      предоставляет возможность заполнения
      матриц случайными числами. Результатом
      функции <span class="prog"><strong>rand</strong></span>
      является матрица чисел, равномерно
      распределенных между нулем и единицей, а
      функции <span class="prog"><strong>randn</strong></span>
      — матрица чисел, распределенных по
      нормальному закону с нулевым средним и
      единичной дисперсией.&nbsp;<p align="left">Функция
      <span class="prog"><strong>diag</strong></span>
      формирует диагональную матрицу из
      вектора, располагая элементы по
      диагонали.
        <p align="left"><a href="#Contents">Содержание</a><a name="Ch2.5"></a>
        <h2 align="left">2.5. Матричные вычисления</h2>
      <p align="left">MatLab содержит множество
      различных функций для работы с
      матрицами. Так, например,
      транспонирование матрицы производится
      при помощи апострофа <span class="prog"><strong>'</strong></span>
        <p align="center"><img border="0" src="matlab/Fig-20.png" width="398" height="216">
        <p align="left">Нахождение обратной матрицы
        проводится с помощью функции <span class="prog"><strong>inv</strong></span>
        для квадратных матриц
        <p align="center"><img border="0" src="matlab/Fig-21.png" width="398" height="200"><p align="left"><a href="matrix.htm#ch115">Псевдообратную
      матрицу</a> можно найти с помощью
      функции <span class="prog"><strong>pinv</strong></span>.&nbsp;<p align="left">Более
      подробно про обработку матричных данных
      можно узнать, если вывести список всех
      встроенных функций обработки данных
      командой <span class="prog"><strong>help
      datafun</strong></span>, а затем посмотреть
      информацию о нужной функции, например <span class="prog"><strong>help
      max</strong></span>.
        <p align="left"><a href="#Contents">Содержание</a><a name="Ch3"></a>
        <h1 align="left">3. Интегрирование MatLab и Excel <a name="Ch3.1"></a></h1>
        <p align="left">Интегрирование MatLab и Excel
        позволяет пользователю Excel обращаться
        к многочисленным функциям MatLab для
        обработки данных, различных вычислений
        и визуализации результата. Надстройка <span class="menu">excllink.xla</span>
        реализует данное расширение
        возможностей Excel. Для связи MatLab и Excel
        определены специальные функции.</p>
      <h2 align="left">3.1. Конфигурирование Excel&nbsp;</h2>
        <p align="left">Перед тем как настраивать Excel
        на совместную работу с MatLab, следует
        убедиться, что Excel Link входит в
        установленную версию MatLab. В
        подкаталоге <span class="menu">exclink</span> основного
        каталога MatLab или подкаталога <span class="menu">toolbox</span>
        должен находиться файл с надстройкой <span class="menu">excllink.xla</span>.
        Запустите Excel и в меню <span class="menu">Tools</span>
        выберите пункт <span class="menu">Add-ins</span>.
        Откроется диалоговое окно, содержащее
        информацию о доступных в данный момент
        надстройках. Используя кнопку <span class="menu">Browse</span>,
        укажите путь к файлу <span class="menu">excllink.xla</span>. В
        списке надстроек диалогового окна
        появится строка <span class="menu">Excel Link 2.0 for use
        with MatLab</span> с установленным флагом.
        Нажмите <span class="menu">OK</span>, требуемая
        надстройка добавлена в Excel.&nbsp;
        <p align="left">Обратите внимание, что в Excel
        теперь присутствует панель
        инструментов <span class="menu">Excel Link</span>,
        содержащая три кнопки: <span class="menu">putmatrix</span>,
        <span class="menu">getmatrix</span>, <span class="menu">evalstring</span>.
        Эти кнопки реализуют основные действия,
        требуемые для осуществления
        взаимосвязи между Excel и MatLab — обмен
        матричными данными, и выполнение
        команд MatLab из среды Excel. При повторных
        запусках Excel надстройка <span class="menu">excllink.xla</span>
        подключается автоматически.&nbsp;
        <p align="left">Согласованная работа Excel и MatLab
        требует еще нескольких установок,
        которые приняты в Excel по умолчанию (но
        могут быть изменены). В меню <span class="menu">Tools </span>перейдите к пункту 
		<span class="menu">Options</span>,
        открывается диалоговое окно <span class="menu">Options</span>.
        Выберите вкладку <span class="menu">General </span>и
        убедитесь, что флаг <span class="menu">R1C1</span> reference style
        выключен, т.е. ячейки нумеруются <span class="address">A1</span>, 
		<span class="address">A2</span> и т.д.
        На вкладке <span class="menu">Edit </span>должен
        быть установлен флаг <span class="menu">Move selection
        after Enter</span>.
        <p align="left"><a href="#Contents">Содержание</a><a name="Ch3.2"></a></p>
        <h2 align="left">3.2. Обмен данными между MatLab и
        Excel</h2>
        <p align="left">Запустите Excel, проверьте, что
        проделаны все необходимые настройки
        так, как описано в предыдущем разделе (MatLab
        должен быть закрыт). Введите в ячейки с
        A1 по C3 матрицу, для отделения
        десятичных знаков используйте точку в
        соответствии с требованиями Excel.&nbsp;
        <p align="center"><img border="0" src="matlab/Fig-22.png" width="188" height="60">
        <p align="left">Выделите на листе данные
        ячейки и нажмите кнопку <span class="menu">putmatrix</span>,
        появляется окно Excel с предупреждением о
        том, что MatLab не запущен. Нажмите <span class="menu">OK</span>,
        дождитесь открытия MatLab.&nbsp;
        <p align="left">Появляется диалоговое окно Excel
        со строкой ввода, предназначенной для
        определения имени переменной рабочей
        среды MatLab, в которую следует
        экспортировать данные из выделенных
        ячеек Excel. Введите к примеру, <span class="prog">М</span> и
        закройте окно при помощи кнопки <span class="menu">OK</span>.
        Перейдите к командному окну MatLab и
        убедитесь, что в рабочей среде
        создалась переменная <span class="prog">М</span>,
        содержащая массив три на три:
        <p align="center"><img border="0" src="matlab/Fig-23.png" width="398" height="216">
        <p align="left">Проделайте некоторые операции
        в MatLab с матрицей <span class="prog">М</span>, например,
        обратите ее.&nbsp;
        <p align="left">Вызов <span class="prog"><strong>inv</strong></span>
        для обращения матрицы, как и любой
        другой команды MatLab можно осуществить
        прямо из Excel. Нажатие на кнопку <span class="menu">evalstring</span>,
        расположенную на панели <span class="menu">Excel Link</span>,
        приводит к появлению диалогового окна,
        в строке ввода которого следует
        набрать команду MatLab&nbsp;
        <p align="center"><span class="prog">IM=inv(M)</span>.&nbsp;
        <p align="left">Результат аналогичен
        полученному при выполнении команды в
        среде MatLab.&nbsp;
        <p align="left">Вернитесь в Excel, сделайте
        текущей ячейку <span class="address">A5</span> и нажмите кнопку
		<span class="menu">getmatrix</span>.
        Появляется диалоговое окно со строкой
        ввода, в которой требуется ввести имя
        переменной, импортируемой в Excel. В
        данном случае такой переменной
        является <span class="prog">IM</span>. Нажмите <span class="menu">OK</span>, в ячейки с
        <span class="address">A5</span> по <span class="address">A7</span> введены элементы обратной
        матрицы.&nbsp;<p align="left">Итак, для экспорта
      матрицы в MatLab следует выделить
      подходящие ячейки листа Excel, а для
      импорта достаточно указать одну ячейку,
      которая будет являться верхним левым
      элементом импортируемого массива.
      Остальные элементы запишутся в ячейки
      листа согласно размерам массива,
      переписывая содержащиеся в них данные,
      поэтому следует соблюдать осторожность
      при импорте массивов.
        <p align="left">Вышеописанный подход является
        самым простым способом обмена
        информацией между приложениями —
        исходные данные содержатся в Excel, затем
        экспортируются в MatLab, обрабатываются
        там некоторым образом и результат
        импортируется в Excel. Пользователь
        переносит данные при помощи кнопок
        панели инструментов <span class="menu">Excel Link</span>.
        Информация может быть представлена в
        виде матрицы, т.е. прямоугольной
        области рабочего листа. Ячейки,
        расположенные в строку или столбец,
        экспортируются, соответственно, в
        вектор<span lang="en-us">ы</span>-строки и вектор<span lang="en-us">ы</span>-столбцы MatLab.
        Аналогично происходит и импорт векторов-строк
        и векторов-столбцов в Excel.
      <p align="left"><a href="#Contents">Содержание</a><a name="Ch4"></a></p>
        <h1 align="left">4. Программирование <a name="Ch4.1"></a></h1>
        <h2 align="left">4.1. М-файлы</h2>
        <p align="left">Работа из командной строки MatLab
        затрудняется, если требуется вводить
        много команд и часто их изменять.
        Ведение дневника при помощи команды <span class="prog"><strong>diary</strong></span>
        и сохранение рабочей среды
        незначительно облегчают работу. Самым
        удобным способом выполнения групп
        команд MatLab является использование М-файлов,
        в которых можно набирать команды,
        выполнять их все сразу или частями,
        сохранять в файле и использовать в
        дальнейшем. Для работы с М-файлами
        предназначен редактор М-файлов. С его
        помощью можно создавать собственные
        функции и вызывать их, в том числе и из
        командного окна.&nbsp;</p>
      <p align="left">Раскройте меню <span class="menu">File</span>
      основного окна MatLab и в пункте <span class="menu">New</span>
      выберите подпункт <span class="menu">M-file</span>.
      Новый файл открывается в окне редактора
      M-файлов, которое изображено на рисунке.</p>
        <p align="center"><img border="0" src="matlab/Fig-24.png" width="643" height="408"></p>
        <p align="left">М-файлы в MatLab бывают двух типов:
        файл-программы (<i>Script M-Files</i>),
        содержащие последовательность команд,
        и файл-функции, (<i>Function M-Files</i>), в которых
        описываются функции, определяемые
        пользователем.&nbsp;</p>
      <p align="left"><a href="#Contents">Содержание</a><a name="Ch4.2"></a></p>
        <h2 align="left">4.2. Файл-программа</h2>
        <p align="left">Наберите в редакторе команды,
        приводящие к построению двух графиков
        на одном графическом окне</p>
        <p align="center"><img border="0" src="matlab/Fig-25.png" width="629" height="238"></p>
        <p align="left">Сохраните теперь файл с именем
        <span class="prog">mydemo.m</span> в подкаталоге work
        основного каталога MatLab, выбрав пункт <span class="menu">Save
        </span>as меню <span class="menu">File </span>редактора. Для запуска на выполнение
        всех команд, содержащихся в файле,
        следует выбрать пункт <span class="menu">Run </span>в меню 
		<span class="menu">Debug</span>. На экране
        появится графическое окно <em>Figure 1</em>,
        содержащее графики функций.&nbsp;</p>
        <p align="left">Команды файл-программы
        осуществляют вывод в командное окно.
        Для подавления вывода следует
        завершать команды точкой с запятой.
        Если при наборе сделана ошибка и MatLab не
        может распознать команду, то
        происходит выполнение команд до
        неправильно введенной, после чего
        выводится сообщение об ошибки в
        командное окно.&nbsp;</p>
        <p align="left">Очень удобной возможностью,
        предоставляемой редактором М-файлов,
        является выполнение части команд.
        Закройте графическое окно <i>Figure 1</i>.
        Выделите при помощи мыши, удерживая
        левую кнопку, или клавишами со
        стрелками при нажатой клавише <b class="menu">Shift</b>,
        первые четыре команды и выполните их из
        пункта <span class="menu">Text</span>. Обратите
        внимание, что в графическое окно
        вывелся только один график,
        соответствующий выполненным: командам.
        Запомните, что для выполнения части
        команд их следует выделить и нажать
        клавишу <span class="menu">F9</span>.</p>
        <p align="left">Отдельные блоки М-файла можно
        снабжать комментариями, которые
        пропускаются при выполнении, но удобны
        при работе с М-файлом. Комментарии
        начинаются со знака процента и
        автоматически выделяются зеленым
        цветом, например:</p>
        <p align="center"><img border="0" src="matlab/Fig-26.png" width="629" height="325"></p>
        <p align="left">Открытие существующего М-файла
        производится при помощи пункта <span class="menu">Open </span>меню 
		<span class="menu">File </span>рабочей среды,
        либо редактора М-файлов.</p>
      <p align="left"><a href="#Contents">Содержание</a><a name="Ch4.3"></a></p>
        <h2 align="left">4.3. Файл-функция</h2>
        <p align="left">Рассмотренная выше файл-программа
        является только последовательностью
        команд MatLab, она не имеет входных и
        выходных аргументов. Для использования
        численных методов и при
        программировании собственных
        приложений в MatLab необходимо уметь
        составлять файл-функции, которые
        производят необходимые действия с
        входными аргументами и возвращают
        результат действия в выходных
        аргументах. Разберем несколько простых
        примеров, позволяющих понять работу с
        файл-функциями.&nbsp;</p>
        <p align="left">Проводя предобработку данных
        многомерного анализа хемометрики
        часто применяет <a href="pca.htm#Ch2.12">центрирование</a>. Имеет
        смысл один раз написать файл-функцию, а
        потом вызывать его всюду, где
        необходимо производить центрирование.
        Откройте в редакторе М-файлов новый
        файл и наберите</p>
        <p align="center"><img border="0" src="matlab/Fig-27.png" width="629" height="259"></p>
        <p align="left">Слово <span class="prog">function</span>
        в первой строке определяет, что данный
        файл содержит файл-функцию. Первая
        строка является заголовком функции, в
        которой размещается имя функции и
        списка входных и выходных аргументов. В
        примере имя функции <span class="prog">centering</span>,
        один входной аргумент <span class="prog">X</span>
        и один выходной — <span class="prog">Xc.</span>
        После заголовка следуют комментарии, а
        затем — тело функции (оно в данном
        примере состоит из двух строк), где и
        вычисляется ее значение. Важно, что
        вычисленное значение записывается в <span class="prog">Xc</span>.
        Не забудьте поставить точку с запятой
        для предотвращения вывода лишней
        информации на экран. Теперь сохраните
        файл в рабочем каталоге. Обратите
        внимание, что выбор пункта <span class="menu">Save </span>или 
		<span class="menu">Save as</span> меню File
        приводит к появлению диалогового окна
        сохранения файла, в поле <span class="menu">File name</span>
        которого уже содержится название <span class="prog">centering</span>.
        Не изменяйте его, сохраните файл
        функцию в файле с предложенным именем!&nbsp;</p>
        <p align="left">Теперь созданную функцию
        можно использовать так же, как и
        встроенные <span class="prog">sin</span>,
        <span class="prog">cos</span> и
        другие. Вызов собственных функций
        может осуществляться из файл-программы
        и из другой файл-функции. Попробуйте
        сами написать файл-функцию, которая
        будет шкалировать матрицы, т.е. делить
        каждый столбец на величину
        среднеквадратичного отклонения по
        этому столбцу.&nbsp;</p>
        <p align="left">Можно написать файл-функции с
        несколькими входными аргументами,
        которые размещаются в списке через
        запятую. Можно также создавать и
        функции, возвращающие несколько
        значений. Для этого выходные аргументы
        добавляются через запятую в список
        выходных аргументов, а сам список
        заключается в квадратные скобки.
        Хорошим примером является функция,
        переводящая время, заданное в секундах,
        в часы, минуты и секунды.</p>
        <p align="center"><img border="0" src="matlab/Fig-28.png" width="627" height="240"></p>
      <p align="left">При вызове файл-функций с
      несколькими выходными аргументами
      результат следует записывать в вектор
      соответствующей длины.</p>
        <p align="left"><a href="#Contents">Содержание</a><a name="Ch4.4"></a></p>
      <h2 align="left">4.4 Создание графика</h2>
      <p align="left">MatLab имеет широкие возможности
      для графического изображения векторов и
      матриц, а также для создания
      комментариев и печати графиков. Дадим
      описание несколько важных графических
      функций.&nbsp;</p>
      <p align="left">Функция <span class="prog"><strong>plot</strong></span>
      имеет различные формы, связанные с
      входными параметрами, например <span class="prog">plot(y)</span>
      создает кусочно-линейный график
      зависимости элементов <span class="prog">y</span>
      от их индексов. Если в качестве
      аргументов заданы два вектора, то plot(x,y)
      создаст график зависимости <span class="prog">y</span>
      от <span class="prog">x</span>.
      Например, для построения графика
      функции <span class="prog">sin</span>
      в интервале от 0 до 2&#960;,
      сделаем следующее</p>
      <p align="center"><img border="0" src="matlab/Fig-29.png" width="398" height="121"></p>
      <p align="left">Программа построила график
      зависимости, который отображается в
      окне <em>Figure 1</em></p>
      <p align="center"><img border="0" src="matlab/Fig-30.png" width="568" height="493"></p>
      <p align="left">MatLab автоматически присваивает
      каждому графику свой цвет (исключая
      случаи, когда это делает пользователь),
      что позволяет различать наборы данных.&nbsp;</p>
      <p align="left">Команда <span class="prog"><strong>hold
      on</strong></span> позволяет добавлять кривые на
      существующий график. Функция <span class="prog"><strong>subplot</strong></span>
      позволяет выводить множество графиков в
      одном окне</p>
      <p align="center"><img border="0" src="matlab/Fig-31.png" width="398" height="198"></p>
      <p align="center"><img border="0" src="matlab/Fig-32.png" width="568" height="493"></p>
      <p align="left"><a href="#Contents">Содержание</a><a name="Ch4.5"></a></p>
      <h2 align="left">4.5 Печать графиков&nbsp;</h2>
      <p align="left">Пункт <span class="menu">Print</span> в меню
      <span class="menu">File</span> и команда <span class="prog"><strong>print</strong></span>
      печатают графику MatLab. Меню <span class="menu">Print</span>
      вызывает диалоговое окно, которое
      позволяет выбирать общие стандартные
      варианты печати. Команда <span class="prog"><strong>print</strong></span>
      обеспечивает большую гибкость при
      выводе выходных данных и позволяет
      контролировать печать из М-файлов.
      Результат может быть послан прямо на
      принтер, выбранный по умолчанию, или
      сохранен в заданном файле.
      <p align="left"><a href="#Contents">Содержание</a><a name="Ch5"></a></p>
        <h1 align="left">5. Примеры программ&nbsp;</h1>
        <p align="left">В этом разделе приведены
        наиболее употребительные алгоритмы,
        используемые при анализе многомерных
        данных. Рассмотрены как простейшие
        методы преобразования данных <a href="calibration.htm#Ch1.8">
        центрирование и шкалирование,</a> так и
        алгоритмы для анализа данных — PCA, PLS.<a name="Ch5.1"></a></p>
        <h2 align="left">5.1. Центрирование и
        шкалирование&nbsp;</h2>
        <p align="left" style="margin-bottom: 20">Часто при
        анализе требуется преобразовать
        исходные данные. Наиболее
        используемыми методами преобразования
        данных выступают центрирование и
        шкалирование каждой переменной на
        стандартное отклонение. В <a href="#Ch4.3">разделе
        4.3</a> приводился код функции для
        центрирования матрицы. Поэтому ниже
        показан только код функции, которая <u>
        шкалирует</u> данные. Обратите внимание,
        что исходная матрица должна быть
        центрирована
      <div align="center">
        <center>
        <table border="1" cellpadding="6" cellspacing="0" width="70%" bgcolor="#DFDFDF">
          <tr>
            <td width="100%"><code>function Xs = scaling(X)<br>
              <font color="#008000">% scaling: the output matrix is Xs</font><font color="#00FF00"><br>
              </font><font color="#008000">% matrix X must be centered&nbsp;</font><br>
              <br>
              Xs = X * inv(diag(std(X)));<br>
              <br>
              <font color="#008000">%end of scaling</font></code></td>
          </tr>
        </table>
        </center>
      </div>
      <p align="left"><a href="#Contents">Содержание</a><a name="Ch5.2"></a></p>
        <h2 align="left">5.2. SVD/PCA&nbsp;</h2>
        <p align="left">Наиболее популярным способом
        сжатия данных в многомерном анализе
        является <a href="pca.htm"> метод главных компонент (PCA)</a>. С
        математической точки зрения PCA — это
        декомпозиция исходной матрицы <b>X</b>, т.е.
        представление ее в виде произведения
        двух матриц <b>T</b> и <b>P</b>&nbsp;
        <p align="center"><b>X</b> = <b>TP</b><sup>t</sup> + <b>E</b>&nbsp;
        <p align="left">Матрица <b>T</b> называется
        матрицей счетов (scores) , матрица <b>P</b> —
        матрицей нагрузок (loadings), а <b>E</b> —
        матрицей остатков.&nbsp;<p align="left" style="margin-bottom: 20">Простейший
      способ найти матрицы <b>T</b> и <b>P</b> —
      использовать <a href="matrix.htm#ch211">SVD
      разложение </a> через стандартную
      функцию MatLab, называемую <span class="prog"><strong>svd</strong></span>.
      <div align="center">
        <center>
        <table border="1" cellpadding="6" cellspacing="0" width="70%" bgcolor="#DFDFDF">
          <tr>
            <td width="100%"><code>function [T, P] = pcasvd(X)<br>
              <font color="#008000">% pcasvd: calculates PCA components.<br>
              % The output matrices are T and P.<br>
              % T contains scores<br>
              % P contains loadings</font></code>
              <p><code>[U,D,V] = svd(X);<br>
              T = U * D;<br>
              P = V;</code></p>
              <p><code><font color="#008000">%end of pcasvd</font></code></td>
          </tr>
        </table>
        </center>
      </div>
      <p align="left"><a href="#Contents">Содержание</a><a name="Ch5.3"></a></p>
      <h2 align="left">5.3 PCA/NIPALS</h2>
        <p>Для построения PCA счетов и нагрузок,
        используется рекуррентный алгоритм <a href="references.htm#L3.1">NIPALS</a>,
        который на каждом шагу вычисляет одну
        компоненту. Сначала исходная матрица <b>X</b>
        преобразуется (как минимум – центрируется; см.
        <a href="#Ch4.3">раздел 4.3</a>)
        и превращается в матрицу <b>E</b><sub>0</sub>, <i>a</i>=0.
        Далее применяют следующий алгоритм.&nbsp;
        <blockquote>
          <dl>
            <dd>1. Выбрать начальный вектор <b>t</b>&nbsp;</dd>
            <dd>2. <b>p</b><sup>t</sup> = <b>t</b><sup>t</sup> <b>E</b><i><sub>a</sub></i>
              / <b>t</b><sup>t</sup><b>t</b>&nbsp;</dd>
            <dd>3. <b>p</b> = <b>p</b> / (<b>p</b><sup>t</sup><b>p</b>)<sup>&frac12;</sup></dd>
            <dd>4. <b>t</b> = <b>E</b><i><sub>a</sub></i> <b>p</b> / <b>p</b><sup>t</sup><b>p</b></dd>
            <dd>5. Проверить сходимость, если нет,
              то идти на 2</dd>
          </dl>
        </blockquote>
        <p>После вычисления очередной (<i>a</i>-ой)
        компоненты, полагаем <b>t</b><i><sub>a</sub></i>=<b>t</b>
        и <b>p</b><i><sub>a</sub></i>=<b>p</b>. Для получения
        следующей компоненты надо вычислить
        остатки <b>E</b><sub><i>a</i>+1</sub> = <b>E</b><i><sub>a</sub></i>
        – <b>t</b> <b>p</b><sup>t</sup> и применить к ним тот
        же алгоритм, заменив индекс <i>a</i> на <i>a</i>+1.<p align="left" style="margin-bottom: 20">Код
      алгоритма NIPALS может быть написан и
      самими читателями, в данном же пособии
      авторы приводят свой вариант. При
      расчете PCA, можно вводить число главных
      компонент (переменная <span class="prog">numberPC</span>).
      Если же не известно, сколько необходимо
      компонент, следует написать в командной
      строке <span class="prog">[P,T] =
      pcanipals (X) </span>и тогда программа задаст
      число компонент равным наименьшему из
      показателей размерности исходной
      матрицы <b>X</b>.
      <div align="center">
        <center>
        <table border="1" cellpadding="6" cellspacing="0" width="70%" bgcolor="#DFDFDF">
          <tr>
            <td width="100%"><code>function [T, P] = pcanipals(X, numberPC)<br>
              <font color="#008000">% pcanipals: calculates PCA components.<br>
              % The output matrices are T and P.<br>
              % T contains scores<br>
              % P contains loadings</font></code>
              <p><code><font color="#008000">% calculation of number of
              components</font><br>
              [X_r, X_c] = size(X); P=[]; T=[];<br>
              <br>
              if lenfth(numberPC) &gt; 0<br>
              </code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <code>pc = numberPC{1};<br>
              elseif (length(numberPC) == 0) &amp; X_r &lt; X_c<br>
              </code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <code>pc = X_r;<br>
              else<br>
              </code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <code>pc = X_c;<br>
              end;<br>
              <font color="#008000"><br>
              % calculation of scores and loadings for each component</font><br>
              for k = 1:pc<br>
              </code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <code>P1 = rand(X_c,
              1); T1 = X * P1; d0 = T1'*T1;<br>
              </code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <code>P1 = (T1' * X/(T1'
              * T1))'; P1 = P1/norm(P1); T1 = X * P1; d = T1' * T1;<br>
              <br>
              </code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <code>while d - d0
              &gt; 0.0001;<br>
              </code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
              <code>P1 = (T1' * X/(T1' * T1)); P1 = P1/norm(P1); T1 = X * P1; d0
              = T1'*T1;<br>
              </code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
              <code>P1 = (T1' * X/(T1' * T1)); P1 = P1/norm(P1); T1 = X * P1; d
              = T1'*T1;<br>
              </code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <code>end<br>
              <br>
              </code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <code>X = X - T1 * P1;
              P = cat(1, P, P1'); T = [T,T1];<br>
              end</code></td>
          </tr>
        </table>
        </center>
      </div>
      <p align="left">О вычислении PCA с помощью
      надстройки Chemometrics рассказано в пособии <a href="projection.htm#Ch3">Проекционные
      методы в системе Excel.</a></p>
      <p align="left"><a href="#Contents">Содержание</a><a name="Ch5.4"></a></p>
      <h2 align="left">5.4 PLS1&nbsp;</h2>
      <p align="left">Самым популярным способом для
      многомерной калибровки является метод
      проекции на латентные структуры (PLS). В
      этом методе проводится одновременная
      декомпозиция матрицы предикторов <b>X </b>и
      матрицы откликов <b>Y</b>:&nbsp;
                <p align="center"><b>X</b>=<b>TP</b><sup>t</sup>+<b>E&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b>
                <b>Y</b>=<b>UQ</b><sup>t</sup>+<b>F</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                <b>T</b>=<b>XW</b>(<b>P</b><sup>t</sup><b>W</b>)<sup>–1</sup><p>Проекция строится согласованно – так,
        чтобы максимизировать корреляцию
        между соответствующими векторами <b>X</b>-счетов
        <b>t</b><i><sub>a</sub></i> и <b>Y</b>-счетов <b>u</b><i><sub>a</sub></i>.
      Если блок данных <b>Y</b> включает
      несколько откликов (т.е. <i>K</i>&gt;1), можно
      построить две проекции исходных данных
      – PLS1 и PLS2. В первом случае для каждого из
      откликов <b>y</b><sub><i>k</i></sub> строится свое
      проекционное подпространство. При этом
      и счета <b>T</b> (<b>U</b>) и нагрузки <b>P</b> (<b>W</b>, <b>Q</b>)
      , зависят от того, какой отклик
      используется. Этот подход называется PLS1.
      Для метода PLS2 строится только одно
      проекционное пространство, которое
      является общим для всех откликов.<p style="margin-bottom: 20">Детальное
      описание метода PLS приведено в <a href="references.htm#L3.1">этой
      книге</a>&nbsp; Для построения PLS1 счетов и
      нагрузок, используется рекуррентный
      алгоритм. Сначала исходные матрицы <b>X</b>
      и <b>Y</b> центрируют&nbsp;
      <div align="center">
        <center>
        <table border="1" cellpadding="6" cellspacing="0" width="70%" bgcolor="#DFDFDF">
          <tr>
            <td width="100%"><code>[E0, mX] = mc(X);<br>
              [F0, mY] = mc(Y);</code></td>
          </tr>
        </table>
        </center>
      </div>
      <p align="left">и они
        превращаются в матрицу <b>E</b><sub>0</sub> и
        вектор <b>f</b><sub>0</sub>, <i>a</i>=0. Далее к ним
        применяет следующий алгоритм
        <blockquote>
          <dl>
            <dd>1. <b>w</b><sup>t</sup> = <b>f</b><i><sub>a</sub></i><sup>t</sup>
              <b>E</b><sub><i>a</i></sub>&nbsp;</dd>
            <dd>2. <b>w</b> = <b>w</b> / (<b>w</b><sup>t</sup><b>w</b>)<sup>&frac12;</sup>&nbsp;</dd>
            <dd>3. <b>t</b> = <b>E</b><i><sub>a</sub></i> <b>w</b></dd>
            <dd>4. <i>q</i> = <b>t</b><sup>t </sup><b>f</b><i><sub>a</sub></i> /
              <b>t</b><sup>t</sup><b>t</b>&nbsp;</dd>
            <dd>5. <b>u</b> = <i>q</i><b>f</b><i><sub>a</sub></i> / <i>q</i><sup>2</sup>&nbsp;</dd>
            <dd>6. <b>p</b><sup>t</sup> = <b>t</b><sup>t </sup><b>E</b><i><sub>a</sub></i>
              / <b>t</b><sup>t</sup><b>t</b>&nbsp;</dd>
          </dl>
        </blockquote>
      <p align="left">После вычисления очередной (<i>a</i>-ой)
        компоненты, полагаем <b>t</b><i><sub>a</sub></i>=<b>t</b>
        и <b>p</b><i><sub>a</sub></i>=<b>p</b>. Для получения
        следующей компоненты надо вычислить
        остатки <b>E</b><sub><i>a</i>+1</sub> = <b>E</b><i><sub>a</sub></i>
        – <b>t</b> <b>p</b><sup>t</sup> и применить к ним тот
        же алгоритм, заменив индекс <i>a</i> на <i>a</i>+1.</p>
      <p align="left">Приведем код этого алгоритма,
      взятый из <a href="references.htm#L3.2">книги</a></p>
      <div align="center">
        <center>
        <table border="1" cellpadding="6" cellspacing="0" width="70%" bgcolor="#DFDFDF">
          <tr>
            <td width="100%"><code>function [w, t, u, q, p] = pls(x, y)<br>
              <font color="#008000">%PLS: calculates a PLS component.<br>
              %The output vectors are w, t, u, q and p.<br>
              %<br>
              % Choose a vector from y as starting vector u.<br>
              </font><br>
              &nbsp;&nbsp; u = y(:, 1);<br>
              <br>
              <font color="#008000">% The convergence criterion is set very high.</font><br>
              &nbsp;&nbsp; kri = 100;<br>
              <br>
              <font color="#008000">% The commands from here to end are repeated
              until convergence.</font><br>
              &nbsp;&nbsp; while (kri &gt; 1e - 10)<br>
              <br>
              <font color="#008000">% Each starting vector u is saved as uold.</font><br>
              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; uold = u; w = (u' * x)'; w = w/norm(w);<br>
              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; t = x * w; q = (t' * y)'/(t' * t);<br>
              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; u = y * q/(q' * q);<br>
              <br>
              <font color="#008000">% The convergence criterion is the norm of
              u-uold divided by the norm of u.</font><br>
              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; kri = norm(uold - u)/norm(u);<br>
              &nbsp;&nbsp; end;<br>
              <br>
              <font color="#008000">% After convergence, calculate p.<br>
              </font>&nbsp;&nbsp; p = (t' * x)'/(t' * t);</code>
              <p><code><font color="#008000">% End of pls</font></code></td>
          </tr>
        </table>
        </center>
      </div>
      <p align="left">О вычислении PLS1 с помощью
      надстройки <em>Chemometrics </em><span lang="en-us"><em>Add In</em> </span>рассказано в пособии <a href="projection.htm#Ch4">Проекционные
      методы в системе Excel.</a></p>
      <p align="left"><a href="#Contents">Содержание</a> <a name="Ch5.5"></a></p>
      <h2 align="left">5.5 PLS2&nbsp;</h2>
      <p>Для PLS2 алгоритм выглядит следующим
        образом. Сначала исходные матрицы <b>X</b>
        и <b>Y</b> преобразуют (как минимум – центрируют; см.&nbsp;
      <a href="#Ch4.3">разделе 4.3</a>), и
        они превращаются в матрицы <b>E</b><sub>0</sub>
        и <b>F</b><sub>0</sub>, <i>a</i>=0. Далее к ним
        применяет следующий алгоритм.</p>
        <blockquote>
          <dl>
            <dd>1. Выбрать начальный вектор <b>u</b>&nbsp;</dd>
            <dd>2. <b>w</b><sup>t</sup> = <b>u</b><sup>t</sup> <b>E</b><sub><i>a</i></sub>&nbsp;</dd>
            <dd>3. <b>w</b> = <b>w</b> / (<b>w</b><sup>t</sup><b>w</b>)<sup>&frac12;</sup>&nbsp;</dd>
            <dd>4. <b>t</b> = <b>E</b><i><sub>a</sub></i> <b>w</b></dd>
            <dd>5. <b>q</b><sup>t</sup> = <b>t</b><sup>t </sup><b>F</b><i><sub>a</sub></i>
              / <b>t</b><sup>t</sup><b>t</b>&nbsp;</dd>
            <dd>6. <b>u</b> = <b>F</b><i><sub>a</sub></i> <b>q</b>/ <b>q</b><sup>t</sup><b>q</b>&nbsp;</dd>
            <dd>7. Проверить сходимость, если нет,
              то идти на 2</dd>
            <dd>8. <b>p</b><sup>t</sup> = <b>t</b><sup>t </sup><b>E</b><i><sub>a</sub></i>
              / <b>t</b><sup>t</sup><b>t</b>&nbsp;</dd>
          </dl>
        </blockquote>
        <p>После вычисления очередной (<i>a</i>-ой)
        PLS2 компоненты надо положить: <b>t</b><i><sub>a</sub></i>=<b>t</b>,
        <b>p</b><i><sub>a</sub></i>=<b>p, w</b><i><sub>a</sub></i>=<b>w</b>, <b>u</b><i><sub>a</sub></i>=<b>u</b>
        и <b>q</b><sub>a</sub>=<b>q</b>. Для получения
        следующей компоненты надо вычислить
        остатки <b>E</b><sub><i>a</i>+1</sub> = <b>E</b><i><sub>a</sub></i>
        –<b> t p</b><sup>t</sup> и <b>F</b><i><sub>a</sub></i><sub>+1</sub> =
        <b>F</b><sub><i>a</i></sub> – <b>tq</b><sup>t</sup>&nbsp; и
        применить к ним тот же алгоритм,
        заменив индекс <i>a</i> на <i>a</i>+1.</p>
      <p align="left">Приведем код,&nbsp; которой также
      заимствован из из <a href="references.htm#L3.2">книги</a>.</p>
      <div align="center">
        <center>
        <table border="1" cellpadding="6" cellspacing="0" width="70%" bgcolor="#DFDFDF">
          <tr>
            <td width="100%"><code>function [W, T, U, Q, P, B, SS] = plsr(x, y,
              a)<br>
              <font color="#008000">% PLS: calculates a PLS component.<br>
              % The output matrices are W, T, U, Q and P.<br>
              % B contains the regression coefficients and SS the sums of<br>
              % squares for the residuals.<br>
              % a is the numbers of components.<br>
              %<br>
              % For a components: use all commands to end.</font><br>
              <br>
              &nbsp;&nbsp; for i=1:a<br>
              <font color="#008000">% Calculate the sum of squares. Use the
              function ss.</font><br>
              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sx = [sx; ss(x)];<br>
              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; sy = [sy; ss(y)];<br>
              <br>
              <font color="#008000">% Use the function pls to calculate one
              component.</font><br>
              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [w, t, u, q, p] = pls(x, y);<br>
              <br>
              <font color="#008000">% Calculate the residuals.</font><br>
              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; x = x - t * p';<br>
              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; y = y - t * q';<br>
              <br>
              <font color="#008000">% Save the vectors in matrices.</font><br>
              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; W = [W w];<br>
              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; T = [T t];<br>
              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; U = [U u];<br>
              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Q = [Q q];<br>
              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; P = [P p];<br>
              &nbsp;&nbsp; end;<br>
              <br>
              <font color="#008000">% Calculate the regression coefficients
              after the loop.</font><br>
              &nbsp;&nbsp; B=W*inv(P'*W)*Q';<br>
              <br>
              <font color="#008000">% Add the final residual SS to the sum of
              squares vectors.</font><br>
              &nbsp;&nbsp; sx=[sx; ss(x)];<br>
              &nbsp;&nbsp; sy=[sy; ss(y)];<br>
              <br>
              <font color="#008000">% Make a matrix of the ss vectors for X and
              Y.</font><br>
              &nbsp;&nbsp; SS = [sx sy];<br>
              <br>
              <font color="#008000">%Calculate the fraction of SS used.</font><br>
              &nbsp;&nbsp; [a, b] = size(SS);<br>
              &nbsp;&nbsp; tt = (SS * diag(SS(1,:).^(-1)) - ones(a, b)) * (-1)<br>
              <br>
              <font color="#008000">%End of plsr</font></code>
              <p><code>function [ss] = ss(x)<br>
              <font color="#008000">%SS: calculates the sum of squares of a
              matrix X.<br>
              %</font><br>
              &nbsp;&nbsp; ss=sum(sum(x. * x));<br>
              <font color="#008000">%End of ss</font></code></td>
          </tr>
        </table>
        </center>
      </div>
      <p align="left">О вычислении PLS2 с помощью
      надстройки <em>Chemometrics </em><span lang="en-us"><em>Add In</em> </span>рассказано в пособии <a href="projection.htm#Ch5">Проекционные
      методы в системе Excel.</a></p>
      <p align="left"><a href="#Contents">Содержание</a><a name="Ch6"></a></p>
      <h1 align="left">Заключение </h1>
      <p align="left">MatLab ­ это это очень популярный инструмент для анализа 
		данных. По данным опроса,
      его используют до трети всех
      исследователей, тогда как программа <a href="http://www.camo.com/rt/Products/Unscrambler/unscrambler.html">the
      Unsrambler</a> применяется только 16% ученых.
      Главным недостатком MatLab являются его
      высокая цена. Кроме того, MatLab хорош для
      рутинных расчетов. Отсутствие
      интерактивности делает его неудобным
      при выполнении поисковых,
      исследовательских расчетов для новых,
      неисследованных массивов данных.&nbsp;&nbsp; </p>
      <p align="left">Проблему цены решает
      альтернативное 
      математическое обеспечение <i>Chemometrics</i> -
      специальная надстройка для системы
      Microsoft Excel. Подробнее о ней рассказано в
      пособии <a href="projection.htm">Проекционные
      методы в системе Excel</a>. </p>
      <p align="left"><a href="#Contents">Содержание</a></p>
  </table>

</body>

